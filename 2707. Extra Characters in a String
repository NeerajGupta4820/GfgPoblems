class Solution {
public:
    int count=0;
    int solve(vector<int>&dp,string &s,unordered_set<string>&st,int start){
        int n=s.length();
        if(start>=n) return 0;
        if(dp[start]!=-1) return dp[start];
        int count=n;

        string temp="";
        for(int i=start;i<n;i++){
            temp+=s[i];
            if(st.find(temp)!=st.end()) {
                count=min(count,solve(dp,s,st,i+1));
            }
            else{
                count=min(count,(i-start+1)+solve(dp,s,st,i+1));
            }
        }
        return dp[start]=count;
    }
    int minExtraChar(string s, vector<string>& dictionary) {
        int n=s.length();
        vector<int>dp(n+1,-1);  
        unordered_set<string> st(dictionary.begin(), dictionary.end());
        return solve(dp,s,st,0);
    }
};
