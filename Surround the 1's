//link of the problem:https://practice.geeksforgeeks.org/problems/surround-the-1s2505/1

class Solution{
    public:    
    int Count(vector<vector<int> >& matrix) {
        // Code here
        
        int n = matrix.size();
        int m = matrix[0].size();
        
        vector<vector<bool>> zeroPosition(n, vector<bool>(m,0));
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == 0) zeroPosition[i][j]=1;
                
            }
        }
        
        int ans = 0;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                int count = 0;
                if(matrix[i][j] == 1){
                    // up
                    if(i - 1 >= 0) count += zeroPosition[i-1][j];
                    
                    // down
                    if(i + 1 < n) count += zeroPosition[i+1][j];
                    
                    // Left
                    if(j - 1 >= 0) count += zeroPosition[i][j-1];
                    
                    // right
                    if(j + 1 < m) count += zeroPosition[i][j+1];
                    
                    // upleft
                    if(i - 1 >= 0 && j - 1 >= 0) count += zeroPosition[i-1][j-1];
                    
                    // upright
                    if(i - 1 >= 0 && j + 1 < m) count += zeroPosition[i-1][j+1];
                    
                    // downleft
                    if(i + 1 < n && j - 1 >= 0) count += zeroPosition[i+1][j-1];
                    
                    // downright
                    if(i + 1 < n && j + 1 < m) count += zeroPosition[i+1][j+1];
                    
                    
                }
                if(count!= 0 && !(count&1)) ans++;
            }
        }
        
        return ans;
    }

 
};
