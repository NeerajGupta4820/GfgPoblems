/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int c = 0;
    void help(TreeNode* root, vector<int>& arr)
    {
        if(root == NULL) return;
        arr[root->val]+=1;
        help(root->left, arr);
        help(root->right, arr);
        if(root->left == NULL && root->right==NULL)
        {
            int f = 0;
            for(int i=1;i<=9;i++)
            {
                if(arr[i]%2 != 0)
                    f += 1;
            }
            if(f==1 or f==0)
                c += 1;
        }
        arr[root->val] -= 1;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int> arr(10, 0);
        help(root, arr);
        return c;
    }
};
